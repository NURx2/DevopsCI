name: CMake

on:
  push:
    branches: [ "task-ci" ]
  pull_request:
    branches: [ "task-ci" ]

env:
  # (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Test

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Download GTest
      run: |
        git clone https://github.com/google/googletest.git
        mkdir task-ci/3rdparty
        ls -la googletest
        cp -r ./googletest/ task-ci/3rdparty/
        ls -la task-ci/3rdparty/

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run:
#        ls -la ${{github.workspace}}/task-ci/
#        ls -la ${{github.workspace}}/task-ci/build/
        cd task-ci && cmake -B ${{github.workspace}}/task-ci/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/task-ci/build --config ${{env.BUILD_TYPE}}

#    - name: Test
#      uses: akhtyamovpavel/ActionGtestReport@v0.0.9
#     with:
#       exec-path: ./CTestExe
#       report-path: report.xml
#       working-directory: ./task-ci/bin/

    - name: UploadArtifacts
      uses: actions/upload-artifact@v3
      with:
        name: Distributive
        path: |
          ./task-ci/bin/
          ./task-ci/lib/
